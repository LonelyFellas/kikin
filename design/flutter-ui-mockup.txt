# Flutter Git项目管理桌面客户端 - UI原型图

## 主界面布局 (Material Design 3)

```
┌─────────────────────────────────────────────────────────────────────────────────────────┐
│ 🗂️ Git项目管理器                                    🔍 [搜索项目...] ⚙️ 👤 🌙        │
├─────────────────────────────────────────────────────────────────────────────────────────┤
│ 文件  编辑  视图  工具  帮助                                                             │
├─────────────────────────────────────────────────────────────────────────────────────────┤
│ ┌─────────────────┬─────────────────────────────────────────────────────────────────┐ │
│ │ 项目列表         │ 主内容区域                                                      │ │
│ │ (250px)         │                                                                 │ │
│ │                 │                                                                 │ │
│ │ ┌─────────────┐ │ ┌─────────────────────────────────────────────────────────────┐ │ │
│ │ │ 🔍 搜索项目  │ │ │ 项目概览卡片                                                │ │ │
│ │ └─────────────┘ │ │ ┌─────────────────────────────────────────────────────────┐ │ │ │
│ │                 │ │ │ 📁 MyAwesomeProject                    ⭐ [收藏]         │ │ │ │
│ │ ┌─────────────┐ │ │ │ 📍 /Users/workspace/MyAwesomeProject                    │ │ │ │
│ │ │ [📥 克隆]   │ │ │ │ 🏷️  Node.js  •  📅 2024-01-15  •  💾 15.2MB  •  📄 1,234文件 │ │ │ │
│ │ │ [📁 新建]   │ │ │ └─────────────────────────────────────────────────────────┘ │ │ │
│ │ └─────────────┘ │ │                                                                 │ │ │
│ │                 │ │ ┌─────────────────────────────────────────────────────────┐ │ │ │
│ │ ┌─────────────┐ │ │ │ Git状态卡片                                            │ │ │ │
│ │ │ 📁 最近项目  │ │ │ │ 🌿 main (本地) → origin/main (远程)                   │ │ │ │
│ │ │             │ │ │ │ 📊 领先 2 个提交，落后 0 个提交                        │ │ │ │
│ │ │ 🟢 项目A    │ │ │ │ ⚠️  3 个文件已修改，1 个文件已暂存                    │ │ │ │
│ │ │ 🟡 项目B    │ │ │ │ 🔗 https://github.com/user/MyAwesomeProject.git        │ │ │ │
│ │ │ 🔴 项目C    │ │ │ │                                                         │ │ │ │
│ │ │             │ │ │ │ [👁️ 查看差异] [📝 暂存更改] [💾 提交] [⬆️ 推送] [⬇️ 拉取] │ │ │ │
│ │ └─────────────┘ │ │ └─────────────────────────────────────────────────────────┘ │ │ │
│ │                 │ │                                                                 │ │ │
│ │ ┌─────────────┐ │ │ ┌─────────────────────────────────────────────────────────┐ │ │ │
│ │ │ ⭐ 收藏项目  │ │ │ │ 文件更改 (3个文件)                                    │ │ │ │
│ │ │             │ │ │ │ ┌─────────────────────────────────────────────────────┐ │ │ │ │
│ │ │ 🟢 项目D    │ │ │ │ │ 状态 │ 文件路径                    │ 操作            │ │ │ │ │
│ │ │ 🟢 项目E    │ │ │ │ ├─────┼─────────────────────────────┼─────────────────┤ │ │ │ │
│ │ │             │ │ │ │ │ M   │ src/components/Header.tsx   │ [👁️] [📝] [↩️]  │ │ │ │ │
│ │ └─────────────┘ │ │ │ │ A   │ src/utils/helpers.js        │ [👁️] [📝] [↩️]  │ │ │ │ │
│ │                 │ │ │ │ D   │ old/legacy-code.js          │ [👁️] [📝] [↩️]  │ │ │ │ │
│ │ ┌─────────────┐ │ │ │ └─────┴─────────────────────────────┴─────────────────┘ │ │ │ │
│ │ │ 🏷️ 标签     │ │ │ └─────────────────────────────────────────────────────────┘ │ │ │
│ │ │             │ │ │                                                                 │ │ │
│ │ │ 🏷️ 工作     │ │ │ ┌─────────────────────────────────────────────────────────┐ │ │ │
│ │ │ 🏷️ 个人     │ │ │ │ 最近提交历史                                            │ │ │ │
│ │ │ 🏷️ 学习     │ │ │ │ ┌─────────────────────────────────────────────────────┐ │ │ │ │
│ │ │             │ │ │ │ │ 👤 张三  │ feat: 添加用户认证功能       │ 2小时前  │ │ │ │ │
│ │ │             │ │ │ │ │ 👤 李四  │ fix: 修复登录页面bug         │ 1天前    │ │ │ │ │
│ │ │             │ │ │ │ │ 👤 王五  │ docs: 更新API文档           │ 3天前    │ │ │ │ │
│ │ │             │ │ │ │ │ 👤 张三  │ style: 优化UI样式           │ 1周前    │ │ │ │ │
│ │ │             │ │ │ │ └─────────────────────────────────────────────────────┘ │ │ │ │
│ │ │             │ │ │ └─────────────────────────────────────────────────────────┘ │ │ │
│ └─────────────────┴─────────────────────────────────────────────────────────────────┘ │
└─────────────────────────────────────────────────────────────────────────────────────────┘
│ 就绪 | 项目: MyAwesomeProject | 分支: main | 更改: 3个文件 | 远程: 已连接                │
└─────────────────────────────────────────────────────────────────────────────────────────┘
```

## 差异查看界面

```
┌─────────────────────────────────────────────────────────────────────────────────────────┐
│ 文件差异对比 - src/components/Header.tsx                              [−] [□] [×]        │
├─────────────────────────────────────────────────────────────────────────────────────────┤
│ [← 返回] [📋 复制] [💾 保存] [↩️ 撤销] [🔄 刷新]                                        │
├─────────────────────────────────────────────────────────────────────────────────────────┤
│ ┌─────────────────────────────────┬─────────────────────────────────────────────────┐   │
│ │ 修改前 (HEAD)                   │ 修改后 (工作区)                                  │   │
│ ├─────────────────────────────────┼─────────────────────────────────────────────────┤   │
│ │ 1  import React from 'react';   │ 1  import React from 'react';                   │   │
│ │ 2  import { useState } from     │ 2  import { useState, useEffect } from          │   │
│ │ 3    'react';                   │ 3    'react';                                   │   │
│ │ 4                               │ 4                                               │   │
│ │ 5  const Header = () => {       │ 5  const Header = () => {                       │   │
│ │ 6    const [isOpen, setIsOpen]  │ 6    const [isOpen, setIsOpen]                  │   │
│ │ 7      = useState(false);       │ 7      = useState(false);                       │   │
│ │ 8                               │ 8                                               │   │
│ │ 9    return (                   │ 9    useEffect(() => {                          │   │
│ │10      <header>                 │10      // 组件挂载时的逻辑                      │   │
│ │11        <nav>                  │11    }, []);                                    │   │
│ │12          <div>                │12                                               │   │
│ │13            <h1>My App</h1>    │13    return (                                   │   │
│ │14          </div>               │14      <header>                                 │   │
│ │15        </nav>                 │15        <nav>                                  │   │
│ │16      </header>                │16          <div>                                │   │
│ │17    );                         │17            <h1>My App</h1>                    │   │
│ │18  };                           │18          </div>                                │   │
│ │19                               │19        </nav>                                  │   │
│ │20  export default Header;       │20      </header>                                │   │
│ │                                 │21    );                                          │   │
│ │                                 │22  };                                            │   │
│ │                                 │23                                               │   │
│ │                                 │24  export default Header;                       │   │
│ └─────────────────────────────────┴─────────────────────────────────────────────────┘   │
└─────────────────────────────────────────────────────────────────────────────────────────┘
```

## 提交界面

```
┌─────────────────────────────────────────────────────────────────────────────────────────┐
│ 提交更改 - MyAwesomeProject                                            [−] [□] [×]        │
├─────────────────────────────────────────────────────────────────────────────────────────┤
│ [← 返回] [💾 提交] [📝 提交并推送] [❌ 取消]                                            │
├─────────────────────────────────────────────────────────────────────────────────────────┤
│ ┌─────────────────────────────────────────────────────────────────────────────────────┐ │
│ │ 提交信息                                                                           │ │
│ │ ┌─────────────────────────────────────────────────────────────────────────────────┐ │ │
│ │ │ feat: 添加用户认证功能                                                           │ │ │
│ │ │                                                                                 │ │ │
│ │ │ - 实现用户登录/注册功能                                                          │ │ │
│ │ │ - 添加JWT token验证                                                             │ │ │
│ │ │ - 更新用户界面组件                                                               │ │ │
│ │ │                                                                                 │ │ │
│ │ │ Closes #123                                                                     │ │ │
│ │ └─────────────────────────────────────────────────────────────────────────────────┘ │ │
│ └─────────────────────────────────────────────────────────────────────────────────────┘ │
│ ┌─────────────────────────────────────────────────────────────────────────────────────┐ │
│ │ 要提交的文件 (3个文件)                                                              │ │
│ │ ┌─────────────────────────────────────────────────────────────────────────────────┐ │ │
│ │ │ ☑️ src/components/Header.tsx     (修改)                                         │ │ │
│ │ │ ☑️ src/utils/helpers.js          (新增)                                         │ │ │
│ │ │ ☑️ old/legacy-code.js            (删除)                                         │ │ │
│ │ └─────────────────────────────────────────────────────────────────────────────────┘ │ │
│ └─────────────────────────────────────────────────────────────────────────────────────┘ │
│ ┌─────────────────────────────────────────────────────────────────────────────────────┐ │
│ │ 提交选项                                                                           │ │
│ │ ┌─────────────────────────────────────────────────────────────────────────────────┐ │ │
│ │ │ ☑️ 签名提交 (使用 GPG)                                                           │ │ │
│ │ │ ☑️ 推送提交到远程仓库                                                             │ │ │
│ │ │ ☐ 修改最后一次提交 (--amend)                                                     │ │ │
│ │ └─────────────────────────────────────────────────────────────────────────────────┘ │ │
│ └─────────────────────────────────────────────────────────────────────────────────────┘ │
└─────────────────────────────────────────────────────────────────────────────────────────┘
```

## 设置界面

```
┌─────────────────────────────────────────────────────────────────────────────────────────┐
│ 设置 - Git项目管理器                                                      [−] [□] [×]        │
├─────────────────────────────────────────────────────────────────────────────────────────┤
│ [← 返回] [💾 保存] [↩️ 重置] [❌ 取消]                                                  │
├─────────────────────────────────────────────────────────────────────────────────────────┤
│ ┌─────────┬───────────────────────────────────────────────────────────────────────────┐ │
│ │ 常规    │ 外观设置                                                                 │ │
│ │ 外观    │ ┌─────────────────────────────────────────────────────────────────────┐ │ │
│ │ Git     │ │ 主题: ○ 浅色主题  ● 深色主题  ○ 跟随系统                            │ │ │
│ │ 高级    │ │ 语言: [中文 (简体) ▼]                                               │ │ │
│ │ 关于    │ │ 字体大小: [14px ▼]                                                  │ │ │
│ │         │ │ 动画效果: ☑️ 启用                                                   │ │ │
│ │         │ └─────────────────────────────────────────────────────────────────────┘ │ │
│ │         │                                                                         │ │
│ │         │ Git设置                                                                 │ │
│ │         │ ┌─────────────────────────────────────────────────────────────────────┐ │ │
│ │         │ │ 默认编辑器: [VS Code ▼]                                             │ │ │
│ │         │ │ 自动刷新间隔: [5秒 ▼]                                               │ │ │
│ │         │ │ 最大历史记录: [1000条 ▼]                                            │ │ │
│ │         │ │ 默认提交类型: [feat ▼]                                               │ │ │
│ │         │ └─────────────────────────────────────────────────────────────────────┘ │ │
│ │         │                                                                         │ │
│ │         │ 项目设置                                                               │ │
│ │         │ ┌─────────────────────────────────────────────────────────────────────┐ │ │
│ │         │ │ 扫描目录: [/Users/workspace ▼] [📁 浏览]                            │ │ │
│ │         │ │ 自动扫描: ☑️ 启用                                                   │ │ │
│ │         │ │ 忽略目录: [node_modules, .git, dist ▼]                             │ │ │
│ │         │ └─────────────────────────────────────────────────────────────────────┘ │ │
│ └─────────┴───────────────────────────────────────────────────────────────────────────┘ │
└─────────────────────────────────────────────────────────────────────────────────────────┘
```

## Flutter组件层次结构

```
MainWindow (Scaffold)
├── AppBar
│   ├── Title: "Git项目管理器"
│   └── Actions: [Search, Settings, Profile, Theme]
├── Body (Row)
│   ├── ProjectSidebar (Container, 250px)
│   │   ├── SearchField
│   │   ├── QuickActions (Row)
│   │   │   ├── CloneButton
│   │   │   └── CreateButton
│   │   ├── ProjectList (ListView)
│   │   │   ├── RecentProjects
│   │   │   ├── FavoriteProjects
│   │   │   └── TaggedProjects
│   │   └── ProjectTags
│   └── ProjectDetailView (Expanded)
│       ├── ProjectOverviewCard
│       │   ├── ProjectInfo
│       │   ├── ProjectStats
│       │   └── FavoriteButton
│       ├── GitStatusCard
│       │   ├── BranchInfo
│       │   ├── StatusStats
│       │   └── ActionButtons
│       └── ContentArea (Row)
│           ├── FileChangesCard
│           │   ├── FileChangesList
│           │   └── FileChangeItem
│           └── CommitHistoryCard
│               └── CommitHistoryList
└── FloatingActionButton
    └── AddProjectButton
```

## Material Design 3 主题配置

```dart
// 浅色主题
final lightTheme = ThemeData(
  useMaterial3: true,
  colorScheme: ColorScheme.fromSeed(
    seedColor: Colors.blue,
    brightness: Brightness.light,
  ),
  appBarTheme: AppBarTheme(
    backgroundColor: Colors.blue.shade50,
    foregroundColor: Colors.blue.shade900,
    elevation: 0,
  ),
  cardTheme: CardTheme(
    elevation: 2,
    shape: RoundedRectangleBorder(
      borderRadius: BorderRadius.circular(12),
    ),
  ),
  elevatedButtonTheme: ElevatedButtonThemeData(
    style: ElevatedButton.styleFrom(
      shape: RoundedRectangleBorder(
        borderRadius: BorderRadius.circular(8),
      ),
    ),
  ),
);

// 深色主题
final darkTheme = ThemeData(
  useMaterial3: true,
  colorScheme: ColorScheme.fromSeed(
    seedColor: Colors.blue,
    brightness: Brightness.dark,
  ),
  appBarTheme: AppBarTheme(
    backgroundColor: Colors.grey.shade900,
    foregroundColor: Colors.white,
    elevation: 0,
  ),
  cardTheme: CardTheme(
    elevation: 2,
    color: Colors.grey.shade800,
    shape: RoundedRectangleBorder(
      borderRadius: BorderRadius.circular(12),
    ),
  ),
  elevatedButtonTheme: ElevatedButtonThemeData(
    style: ElevatedButton.styleFrom(
      shape: RoundedRectangleBorder(
        borderRadius: BorderRadius.circular(8),
      ),
    ),
  ),
);
```

## 响应式设计断点

```dart
// 桌面端断点
const double desktopBreakpoint = 1200;
const double tabletBreakpoint = 768;

// 响应式布局
class ResponsiveLayout extends StatelessWidget {
  final Widget mobile;
  final Widget tablet;
  final Widget desktop;
  
  const ResponsiveLayout({
    Key? key,
    required this.mobile,
    required this.tablet,
    required this.desktop,
  }) : super(key: key);
  
  @override
  Widget build(BuildContext context) {
    return LayoutBuilder(
      builder: (context, constraints) {
        if (constraints.maxWidth >= desktopBreakpoint) {
          return desktop;
        } else if (constraints.maxWidth >= tabletBreakpoint) {
          return tablet;
        } else {
          return mobile;
        }
      },
    );
  }
}
```

## 动画效果设计

```dart
// 页面切换动画
class SlideTransition extends PageTransitionsBuilder {
  @override
  Widget buildTransitions<T extends Object?>(
    PageRoute<T> route,
    BuildContext context,
    Animation<double> animation,
    Animation<double> secondaryAnimation,
    Widget child,
  ) {
    return SlideTransition(
      position: Tween<Offset>(
        begin: const Offset(1.0, 0.0),
        end: Offset.zero,
      ).animate(CurvedAnimation(
        parent: animation,
        curve: Curves.easeInOut,
      )),
      child: child,
    );
  }
}

// 卡片悬停动画
class AnimatedCard extends StatefulWidget {
  final Widget child;
  
  const AnimatedCard({Key? key, required this.child}) : super(key: key);
  
  @override
  _AnimatedCardState createState() => _AnimatedCardState();
}

class _AnimatedCardState extends State<AnimatedCard>
    with SingleTickerProviderStateMixin {
  late AnimationController _controller;
  late Animation<double> _scaleAnimation;
  
  @override
  void initState() {
    super.initState();
    _controller = AnimationController(
      duration: Duration(milliseconds: 200),
      vsync: this,
    );
    _scaleAnimation = Tween<double>(
      begin: 1.0,
      end: 1.05,
    ).animate(CurvedAnimation(
      parent: _controller,
      curve: Curves.easeInOut,
    ));
  }
  
  @override
  Widget build(BuildContext context) {
    return MouseRegion(
      onEnter: (_) => _controller.forward(),
      onExit: (_) => _controller.reverse(),
      child: AnimatedBuilder(
        animation: _scaleAnimation,
        builder: (context, child) {
          return Transform.scale(
            scale: _scaleAnimation.value,
            child: widget.child,
          );
        },
      ),
    );
  }
}
```

这个Flutter UI设计提供了：
- 现代化的Material Design 3界面
- 响应式布局设计
- 丰富的动画效果
- 直观的用户交互
- 完整的组件层次结构
- 主题切换支持
